就多生成了一些类，多了个静态变量保存一点反射后的类信息 , 获取其构造器，放入静态变量map。
这就是 说的多了个静态变量保存一点反射后的类信息。
反射获取 OrderDetailAdapter$ViewHolder_ViewBinding 这种 viewBinding类

这也是为什么有时候一些界面第一次进入时，使用butterknife会比使用运行时注解耗时多那么一丢丢。
但第二次进入时则不会，因为同样的binder类的构造器只反射获取一次。

databinding

context.getResources().getIdentifier("name","id",packageName())


application/json就是body，application/x-formxxxx啥的，就是表单

Volley分为三个线程，分别是主线程、缓存调度线程、和网络调度线程，首先请求会加入缓存队列，如果发现可以找到相应的缓存结果就直接读取缓存并解析，
然后回调给主线程；如果在缓存中没有找到结果，则将这条请求加入到网络队列中，然后发送HTTP请求，解析响应并写入缓存，并回调给主线程。


http的基础用的短连接----socket
okhttp :  http://liuwangshu.cn/application/network/8-okhttp3-sourcecode2.html

Socket也称作“套接字“，是在应用层和传输层之间的一个抽象层，它把TCP/IP层复杂的操作抽象为几个简单的接口供应用层调用以实现进程在网络中通信。
它分为流式套接字和数据包套接字，分别对应网络传输控制层的TCP和UDP协议。
TCP协议是一种面向连接的、可靠的、基于字节流的传输层通信协议。它使用三次握手协议建立连接，并且提供了超时重传机制，具有很高的稳定性。
UDP协议则是是一种无连接的协议，且不对传送数据包进行可靠性保证，适合于一次传输少量数据，UDP传输的可靠性由应用层负责。
在网络质量令人十分不满意的环境下，UDP协议数据包丢失会比较严重。
但是由于UDP的特性：它不属于连接型协议，因而具有资源消耗小，处理速度快的优点，所以通常音频、视频和普通数据在传送时使用UDP较多。